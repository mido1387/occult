#!/bin/bash
# PART 1: Initial ORCA Jobs (MPI Parallel)
#SBATCH --job-name=v3_test_occult_part1
#SBATCH --output=occult_part1.out
#SBATCH --error=occult_part1.err
#SBATCH --nodes=1
#SBATCH --ntasks=36
#SBATCH --cpus-per-task=1
#SBATCH --time=2-00:00:00

# --- User-Defined Variables ---
XYZ_FILE="REPLACE.xyz"
CHARGE=0
SPIN=1
NSOLV=0
SOLVENT=Water

echo "--- Starting Part 1: Initial ORCA Calculations ---"

# --- Setup and Module Loading ---
set -xv # Verbose logging
module load mpi/openmpi/gcc/4.1.6
module load apps/python3
source activate obabel

export PATH=/sw/apps/orca/6.0.1/openmpi-4.1.6-avx2/bin:$PATH
export LD_LIBRARY_PATH=/sw/apps/orca/6.0.1/openmpi-4.1.6-avx2/lib:$LD_LIBRARY_PATH

cd $SLURM_SUBMIT_DIR

# --- Create the Central Configuration File ---
# This file will pass variables to the next scripts.
CONFIG_FILE="workflow.conf"
echo "Writing initial settings to $CONFIG_FILE"

# First, calculate the BASENAME from the XYZ_FILE variable
BASENAME=$(basename "$XYZ_FILE" .xyz)

# Now, write the simple values to the config file.
# The shell will expand the variables before writing.
cat > $CONFIG_FILE << EOL
# Workflow configuration generated by job $SLURM_JOB_ID
export XYZ_FILE="$XYZ_FILE"
export CHARGE="$CHARGE"
export SPIN="$SPIN"
export NSOLV="$NSOLV"
export SOLVENT="$SOLVENT"
export BASENAME="$BASENAME"
EOL

# --- Run Initial Steps ---
# MODIFIED: Added $SOLVENT to the python script call
python nsolv.py $NSOLV $XYZ_FILE $CHARGE $SPIN $SOLVENT

# Define file paths and run first ORCA job
SOLV_INP="nsolv/${BASENAME}_nsolv_${NSOLV}.inp"
echo "Running ORCA on $SOLV_INP..."
/sw/apps/orca/6.0.0/openmpi-4.1.6/orca "$SOLV_INP" > "${SOLV_INP%.inp}.out"

# Generate GOAT input
# MODIFIED: Added $SOLVENT to the python script call
python generate_goat_inp.py "nsolv/${BASENAME}_nsolv_${NSOLV}.solvator.xyz" $CHARGE $SPIN $SOLVENT --nsolv ${NSOLV}

# Define GOAT file path and run second ORCA job
GOAT_INP="goat/${BASENAME}_nsolv_${NSOLV}.goat.inp"
echo "Running ORCA on $GOAT_INP..."
/sw/apps/orca/6.0.0/openmpi-4.1.6/orca "$GOAT_INP" > "${GOAT_INP%.inp}.out"

# --- Prepare Handoff for Part 2 ---
FINAL_ENSEMBLE=$(find goat -name "*finalensemble.xyz" | head -n 1)
if [[ -z "$FINAL_ENSEMBLE" ]]; then
    echo "FATAL ERROR: finalensemble.xyz not found in goat/. Aborting workflow."
    exit 1
fi

# Append the full path of the key output file to the config file
echo "export FINAL_ENSEMBLE=\"$(realpath $FINAL_ENSEMBLE)\"" >> $CONFIG_FILE
echo "Found final ensemble file: $FINAL_ENSEMBLE"

# --- Submit the Next Part of the Workflow ---
echo "Part 1 complete. Submitting Part 2 (CENSO)."
sbatch --dependency=afterok:$SLURM_JOB_ID occult_part2_censo.s